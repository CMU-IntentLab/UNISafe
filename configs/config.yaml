defaults:
  use_ensemble: True
  ensemble_only: False
  reachability_batch_size: 256
  Q_pretrained: null
  ood_only: False
  ood_thr: 3.5
  ood_penalty: -2.5

  dataset_path: null
  eval_dataset_path: null
  logdir: "logs/dreamer_dubins"
  traindir: null
  evaldir: null
  seed: 0
  deterministic_run: True
  steps: 1e6
  parallel: False
  eval_every: 500
  eval_num_seeds: 50
  eval_per_seed: 1
  log_every: 50
  log_every_video: 500
  reset_every: 0
  device: 'cuda'
  compile: True
  precision: 32
  debug: False
  video_pred_log: True
  from_ckpt: null
  lx_ckpt: null
  num_actions: 3

  from_prefill_dir: null
  obs_step: 1
  pretrain_bc_loss_only: True
  pretrain_separately: False
  pretrain_joint_steps: 100000 #50000 #100000 #40000
  pretrain_annealing: null
  pretrain_actor_steps: 0
  pretrain_loss: 'ce'  # 'mse' or 'ce'
  pretrain_ema: False
  ema_decay: 0.999 
  ema_power: 0.8
  recon_pretrain: True # If true, pretrain decoder with reconstruction loss
  dropout_recurrent_prob: 0
  initial_joint_train_steps: 0  # Number of steps to train model on expert+random data before joint training


  # Environment
  task: 'dubins'
  size: [128, 128]
  envs: 1
  action_repeat: 1
  time_limit: 100
  grayscale: False
  prefill: 5000
  reward_EMA: True

  # Model
  dyn_hidden: 512
  dyn_deter: 512
  dyn_stoch: 32
  dyn_discrete: 0 # set as 0 for continuous latent
  dyn_rec_depth: 1
  dyn_mean_act: 'none'
  dyn_std_act: 'sigmoid2'
  dyn_min_std: 0.1
  grad_heads: ['decoder', 'reward', 'cont']
  units: 512
  act: 'SiLU'
  norm: True
  encoder:
    {mlp_keys: '', cnn_keys: 'image', act: 'SiLU', norm: True, cnn_depth: 32, kernel_size: 4, minres: 4, mlp_layers: 5, mlp_units: 1024, symlog_inputs: True}
  decoder:
    {mlp_keys: '', cnn_keys: 'image', act: 'SiLU', norm: True, cnn_depth: 32, kernel_size: 4, minres: 4, mlp_layers: 5, mlp_units: 1024, cnn_sigmoid: False, image_dist: mse, vector_dist: symlog_mse, outscale: 1.0}
  actor:
    {layers: 2, dist: 'normal', entropy: 3e-4, unimix_ratio: 0.01, std: 'learned', min_std: 0.1, max_std: 1.0, temp: 0.1, lr: 3e-5, eps: 1e-5, grad_clip: 100.0, outscale: 1.0}
  critic:
    {layers: 2, dist: 'symlog_disc', slow_target: True, slow_target_update: 1, slow_target_fraction: 0.02, lr: 3e-5, eps: 1e-5, grad_clip: 100.0, outscale: 0.0}
  reward_head:
    {layers: 2, dist: 'symlog_disc', loss_scale: 1.0, outscale: 0.0}
  cont_head:
    {layers: 2, loss_scale: 1.0, outscale: 1.0}
  dyn_scale: 0.5
  rep_scale: 0.1
  kl_free: 1.0
  weight_decay: 0.0
  unimix_ratio: 0.01
  initial: 'learned'

  # Training
  batch_size: 16 #32
  batch_length: 32
  train_ratio: 1024
  pretrain: 100
  model_lr: 1e-4
  obs_lr: 1e-3
  decay_model_lr: false
  opt_eps: 1e-8
  grad_clip: 1000
  dataset_size: 1000000
  opt: 'adam'

  # Behavior.
  discount: 0.997
  discount_lambda: 0.95
  imag_horizon: 15
  imag_gradient: 'dynamics'
  imag_gradient_mix: 0.0
  eval_state_mean: False

  # Exploration
  expl_behavior: 'greedy'
  expl_until: 0
  expl_extr_scale: 0.0
  expl_intr_scale: 1.0
  disag_target: 'deter'
  disag_log: True
  disag_models: 10
  disag_offset: 1
  disag_layers: 2 
  disag_units: 100 
  disag_action_cond: True # False

  # Batch Training
  steps_per_batch: 100
  model_only_scale: 0.0   # additional percentage of steps_per_batch to train only model
  actor_only_scale: 0.0   # additional percentage of steps_per_batch to train only actor
  no_joint_steps: False   # if true, don't train joint model/actor
  mask_recur: False   # Mask out recurrent state
  dropout_recur_in_residuals: False   # Apply dropout on recurrent state in the residuals
  freeze_encoder: False    # Freeze both self.encoder and the embedding from RSSM
  augment_images: False

  doneType: toEnd
  costType: sparse
  randomSeed: 0
  consRadius: 0.25 #0.5
  targetRadius: 0.25 #0.5
  turnRadius:  0.8 #1/1.25
  speed: 1
  warmup: True
  warmupIter: 300 #1000
  maxUpdates: 50000 #400000
  updateTimes: 20
  memoryCapacity: 20000
  checkPeriod: 5000

  annealing: null
  architecture: [100, 100]
  learningRate: 1e-3
  gamma: 0.9999
  actType: ReLU
  mode: RA
  terminalType: g
  showTime: null
  name: 'world_model_new'
  outFolder: logs/RARL_Dubins
  plotFigure: null
  storeFigure: True
  learnedMargin: null
  learnedDyn: null
  image: null
  wm: True
  gt_lx: False
  # num datapts for training encoder, transition, classifier
  num_pts: 5000

  # HJ computation bounds
  x_min: -1.1
  x_max: 1.1
  y_min: -1.1
  y_max: 1.1
  dt: 0.05
  numT: 25
  nx: 51
  ny: 51
  nz: 51

  obs_x: 0
  obs_y: 0
  obs_r: 0.25 #0.5 #0.25

  # Dubins car parameters
  u_max: 1.25
